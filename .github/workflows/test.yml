name: Main Test

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  create-matrix:
    name: Create matrix
    runs-on: ubuntu-latest

    outputs:
      versions: ${{ steps.result.outputs.result }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create major versions matrix
        uses: actions/github-script@v6
        id: result
        with:
          script: |
            const fs = require('fs');

            const data = JSON.parse(fs.readFileSync('paper-versions.json', 'utf8'));
            const supported = data.supported;

            return data.supported;

      - name: View matrix
        run: echo "${{ steps.result.outputs.result }}"

  test:
    name: Test for ${{ matrix.version.paper }} with Java ${{ matrix.version.java }}
    runs-on: ubuntu-latest

    needs:
      - create-matrix

    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.create-matrix.outputs.versions) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.version.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.version.java }}
          distribution: "adopt"

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Test
        uses: ./
        with:
          plugin-name: CheckPluginEnabling
          minecraft-version: ${{ matrix.version.paper }}

  finish:
    name: Finished test
    runs-on: ubuntu-latest

    needs:
      - test

    steps:
      - name: Finish
        run: echo "Finished"